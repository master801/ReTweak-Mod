buildscript {
    repositories {
        mavenLocal()
        // mavenCentral()
        maven {
            name = 'mavenCentral'
            url = "http://repo.maven.apache.org/maven2"
        }
        // jcenter()
        maven {
            name = 'jcenter'
            url = "http://jcenter.bintray.com"
        }
        maven {
            name = 'plugins'
            url = 'https://plugins.gradle.org/m2/'
        }
        maven {
            name = 'artifactory'
            url = project.properties['artifactory_contextUrl'] + '/gradle-dev'
        }
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath(
                'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        )
        classpath(
                group: 'io.franzbecker',
                name: 'gradle-lombok',
                version: '1.14'
        )
    }
}
repositories {
    mavenLocal()
    // mavenCentral()
    maven {
        name = 'mavenCentral'
        url = "http://repo.maven.apache.org/maven2"
    }
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
    maven {
        name = 'artifactory'
        url = project.properties['artifactory_contextUrl'] + '/gradle-dev'
    }
}

apply plugin: 'java'
apply plugin: 'forge'
apply plugin: 'io.franzbecker.gradle-lombok'

version = project.properties['version']
group = 'org.slave.minecraft'
archivesBaseName = 'ReTweak-Mod'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = '1.7.10-10.13.4.1614-1.7.10'
    runDir = 'run'

    replace '@MOD_VERSION@', project.version
}

lombok {
    version = '1.18.4'
    sha256 = ''//idk - do not set sha256
}

jar {
    manifest {
        attributes 'Created-By': 'Master801'
        attributes 'FMLCorePlugin': 'org.slave.minecraft.retweak.asm.ReTweakASM'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

dependencies {
    compile(
            group: 'org.slave.lib',
            name: 'lib',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'io',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'asm-minecraft',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'asm-transformer',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'config',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'program-home',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'log4j-minecraft',
            version: project.properties['slave-lib-version']
    )

    compile(
            group: 'net.sf.supercsv',
            name: 'super-csv',
            version: '2.4.0'
    )


    /*
    compile(
            group: 'org.spongepowered',
            name: 'spongeapi',
            version: project.properties['mixin-version']
    )
    compile(
            group: 'org.spongepowered',
            name: 'mixin',
            version: project.properties['mixin-version']
    )
    */
}

processResources {
    inputs.property(
        'version', project.version
    )
    inputs.property(
        'mcversion', project.minecraft.version
    )

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand(
            'version': project.version,
            'mcversion': project.minecraft.version
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task mkSrcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'src'
}

task mkDevJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

build.dependsOn mkSrcJar, mkDevJar
