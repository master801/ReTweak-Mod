buildscript {
    repositories {
        mavenCentral()
        jcenter()
        //flatDirs dirs: 'gradle_repository'
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'

    }
}

apply plugin: 'java'
apply plugin: 'forge'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

version = project.properties['version']
group = 'org.slave.minecraft'
archivesBaseName = 'ReTweak-Mod'

minecraft {
    version = project.properties['forge-version']
    runDir = 'run'

    replace '@MOD_VERSION@', project.version
}

jar {
    manifest {
        attributes 'Created-By': 'Master801'
        attributes 'FMLCorePlugin': 'org.slave.minecraft.retweak.asm.ReTweakASM'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: project.properties['sl4j-version']
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: project.properties['log4j-version']
    compile group: 'com.github.pwittchen.kirai', name: 'library', version: project.properties['kirari-version']

    compile fileTree(
            dir: 'libs',
            include: [
                    '*.jar'
            ],
            exclude: [
                    '*-src.jar'
            ]
    )
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task proguard(type: proguard.gradle.ProGuardTask) {
    keepattributes 'Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,EnclosingMethod'
    keepattributes '*Annotation*'
    keep 'public class * { \
        public protected *; \
    }'
    keepclassmembers allowshrinking:true, 'enum * { \
        public static **[] values(); \
        public static ** valueOf(java.lang.String); \
    }'
    keepclassmembers 'class * implements java.io.Serializable { \
        static final long serialVersionUID; \
        static final java.io.ObjectStreamField[] serialPersistentFields; \
        private void writeObject(java.io.ObjectOutputStream); \
        private void readObject(java.io.ObjectInputStream); \
        java.lang.Object writeReplace(); \
        java.lang.Object readResolve(); \
    }'
}

task mkSrcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'src'
}

task mkDevJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

build.dependsOn mkSrcJar, mkDevJar
